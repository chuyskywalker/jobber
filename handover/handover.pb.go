// Code generated by protoc-gen-go. DO NOT EDIT.
// source: handover.proto

/*
Package handover is a generated protocol buffer package.

It is generated from these files:
	handover.proto

It has these top-level messages:
	Task
	Result
*/
package handover

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Task struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Task) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type Result struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*Task)(nil), "handover.Task")
	proto.RegisterType((*Result)(nil), "handover.Result")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Handover service

type HandoverClient interface {
	Join(ctx context.Context, opts ...grpc.CallOption) (Handover_JoinClient, error)
}

type handoverClient struct {
	cc *grpc.ClientConn
}

func NewHandoverClient(cc *grpc.ClientConn) HandoverClient {
	return &handoverClient{cc}
}

func (c *handoverClient) Join(ctx context.Context, opts ...grpc.CallOption) (Handover_JoinClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Handover_serviceDesc.Streams[0], c.cc, "/handover.Handover/Join", opts...)
	if err != nil {
		return nil, err
	}
	x := &handoverJoinClient{stream}
	return x, nil
}

type Handover_JoinClient interface {
	Send(*Result) error
	Recv() (*Task, error)
	grpc.ClientStream
}

type handoverJoinClient struct {
	grpc.ClientStream
}

func (x *handoverJoinClient) Send(m *Result) error {
	return x.ClientStream.SendMsg(m)
}

func (x *handoverJoinClient) Recv() (*Task, error) {
	m := new(Task)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Handover service

type HandoverServer interface {
	Join(Handover_JoinServer) error
}

func RegisterHandoverServer(s *grpc.Server, srv HandoverServer) {
	s.RegisterService(&_Handover_serviceDesc, srv)
}

func _Handover_Join_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HandoverServer).Join(&handoverJoinServer{stream})
}

type Handover_JoinServer interface {
	Send(*Task) error
	Recv() (*Result, error)
	grpc.ServerStream
}

type handoverJoinServer struct {
	grpc.ServerStream
}

func (x *handoverJoinServer) Send(m *Task) error {
	return x.ServerStream.SendMsg(m)
}

func (x *handoverJoinServer) Recv() (*Result, error) {
	m := new(Result)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Handover_serviceDesc = grpc.ServiceDesc{
	ServiceName: "handover.Handover",
	HandlerType: (*HandoverServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Join",
			Handler:       _Handover_Join_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "handover.proto",
}

func init() { proto.RegisterFile("handover.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 120 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x48, 0xcc, 0x4b,
	0xc9, 0x2f, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0xa4,
	0xb8, 0x58, 0x42, 0x12, 0x8b, 0xb3, 0x85, 0x84, 0xb8, 0x58, 0x52, 0x12, 0x4b, 0x12, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x19, 0x2e, 0xb6, 0xa0, 0xd4, 0xe2, 0xd2, 0x9c,
	0x12, 0x6c, 0xb2, 0x46, 0x56, 0x5c, 0x1c, 0x1e, 0x50, 0x53, 0x84, 0xf4, 0xb8, 0x58, 0xbc, 0xf2,
	0x33, 0xf3, 0x84, 0x04, 0xf4, 0xe0, 0x16, 0x41, 0x74, 0x4a, 0xf1, 0x21, 0x44, 0x40, 0xf6, 0x28,
	0x31, 0x68, 0x30, 0x1a, 0x30, 0x26, 0xb1, 0x81, 0x9d, 0x61, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x6d, 0x14, 0x00, 0x05, 0x98, 0x00, 0x00, 0x00,
}
