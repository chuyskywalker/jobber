// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payload.proto

/*
Package payload is a generated protocol buffer package.

It is generated from these files:
	payload.proto

It has these top-level messages:
	Task
	Result
*/
package payload

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Task struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Task) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type Result struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*Task)(nil), "payload.Task")
	proto.RegisterType((*Result)(nil), "payload.Result")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Payload service

type PayloadClient interface {
	Join(ctx context.Context, opts ...grpc.CallOption) (Payload_JoinClient, error)
}

type payloadClient struct {
	cc *grpc.ClientConn
}

func NewPayloadClient(cc *grpc.ClientConn) PayloadClient {
	return &payloadClient{cc}
}

func (c *payloadClient) Join(ctx context.Context, opts ...grpc.CallOption) (Payload_JoinClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Payload_serviceDesc.Streams[0], c.cc, "/payload.Payload/Join", opts...)
	if err != nil {
		return nil, err
	}
	x := &payloadJoinClient{stream}
	return x, nil
}

type Payload_JoinClient interface {
	Send(*Result) error
	Recv() (*Task, error)
	grpc.ClientStream
}

type payloadJoinClient struct {
	grpc.ClientStream
}

func (x *payloadJoinClient) Send(m *Result) error {
	return x.ClientStream.SendMsg(m)
}

func (x *payloadJoinClient) Recv() (*Task, error) {
	m := new(Task)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Payload service

type PayloadServer interface {
	Join(Payload_JoinServer) error
}

func RegisterPayloadServer(s *grpc.Server, srv PayloadServer) {
	s.RegisterService(&_Payload_serviceDesc, srv)
}

func _Payload_Join_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PayloadServer).Join(&payloadJoinServer{stream})
}

type Payload_JoinServer interface {
	Send(*Task) error
	Recv() (*Result, error)
	grpc.ServerStream
}

type payloadJoinServer struct {
	grpc.ServerStream
}

func (x *payloadJoinServer) Send(m *Task) error {
	return x.ServerStream.SendMsg(m)
}

func (x *payloadJoinServer) Recv() (*Result, error) {
	m := new(Result)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Payload_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payload.Payload",
	HandlerType: (*PayloadServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Join",
			Handler:       _Payload_Join_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "payload.proto",
}

func init() { proto.RegisterFile("payload.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x48, 0xac, 0xcc,
	0xc9, 0x4f, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0xa4, 0xb8,
	0x58, 0x42, 0x12, 0x8b, 0xb3, 0x85, 0x84, 0xb8, 0x58, 0x52, 0x12, 0x4b, 0x12, 0x25, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x19, 0x2e, 0xb6, 0xa0, 0xd4, 0xe2, 0xd2, 0x9c, 0x12,
	0x6c, 0xb2, 0x46, 0xe6, 0x5c, 0xec, 0x01, 0x10, 0x43, 0x84, 0x74, 0xb8, 0x58, 0xbc, 0xf2, 0x33,
	0xf3, 0x84, 0xf8, 0xf5, 0x60, 0xb6, 0x40, 0xf4, 0x49, 0xf1, 0xc2, 0x05, 0x40, 0x96, 0x28, 0x31,
	0x68, 0x30, 0x1a, 0x30, 0x26, 0xb1, 0x81, 0x9d, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x1e,
	0x44, 0x13, 0xdb, 0x93, 0x00, 0x00, 0x00,
}
